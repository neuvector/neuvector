CC = gcc
AR = ar
AS = as
LD = ld
MAKE = make

ROOTDIR = $(TOPDIR)/..

CFLAGS = -Wall -Werror -fstrict-aliasing -Wstrict-aliasing -g
CFLAGS += -I./ -I$(TOPDIR)/
CFLAGS += -O3

CSRCS += $(wildcard *.c)
OBJS := $(CSRCS:%.c=%.o)

OBJDIR = .objs
DEPDIR = .deps

all: $(DEPDIR) $(OBJDIR) $(LIBDIRS) $(SUBDIRS) $(OBJDIR)/$(TARGET_OBJ) $(TARGET_PROG)

.PHONY: $(OBJDIR)
.PHONY: $(DEPDIR)
$(OBJDIR) $(DEPDIR):
	+@[ -d $@ ] || mkdir -p $@

ifdef SUBDIRS
.PHONY: $(SUBDIRS)

$(SUBDIRS):
	@echo "==> $@"
	$(MAKE) -C $@ $(MAKECMDGOALS)
	@echo "<== $@"
endif

ifdef LIBDIRS
.PHONY: $(LIBDIRS)

$(LIBDIRS):
	@echo "==> $@"
	$(MAKE) -C $@ -f Makefile.local $(MAKECMDGOALS)
	@echo "<== $@"
endif


# Compile *.o object files into an executable
ifdef TARGET_PROG
$(TARGET_PROG): $(addprefix $(OBJDIR)/, $(OBJS)) $(SUBDIR_OBJS)
	$(CC) -o $@ $(LDFLAGS) $^ $(EXTRA_LDFLAGS)
endif

# Compile *.o object files into one .o file
ifdef TARGET_OBJ
$(OBJDIR)/$(TARGET_OBJ): $(addprefix $(OBJDIR)/, $(OBJS)) $(SUBDIR_OBJS)
	$(LD) -r -o $@ $^
endif

$(OBJDIR)/%.o:%.c
	$(CC) $(CFLAGS) $(EXTRA_CFLAGS) -include $(ROOTDIR)/base.h -c $< -o $@ -MD -MF $(@:.o=.d)
	@cp $(OBJDIR)/$*.d $(DEPDIR)/$*.d
	@sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(OBJDIR)/$*.d >> $(DEPDIR)/$*.d;
	@-rm -f $(OBJDIR)/$*.d

.PHONY: clean
clean: $(LIBDIRS) $(SUBDIRS)
	@-rm -rf *~ $(OBJDIR)/*
	@-rm -rf $(OBJDIR)
	@-rm -rf $(DEPDIR)

-include $(DEPDIR)/*.d
