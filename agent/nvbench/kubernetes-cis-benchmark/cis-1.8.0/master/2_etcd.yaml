version: "cis-1.8"
id: 2
title: "2 - etcd"
type: "master"
groups:
  - id: 2.1
    title: ""
    checks:
      - id: '2.1'
        description: Ensure that the --cert-file and --key-file arguments are set as appropriate (Automated)
        type: master
        category: kubernetes
        scored: true
        profile: Level 1
        automated: true
        tags:
        - HIPAA
        - NIST
        - PCI
        - GDPR
        audit: |
              check="$id  - $description"
              if check_argument "$CIS_ETCD_CMD" '--cert-file' >/dev/null 2>&1; then
                  if check_argument "$CIS_ETCD_CMD" '--key-file' >/dev/null 2>&1; then
                      cfile=$(get_argument_value "$CIS_ETCD_CMD" '--cert-file')
                      kfile=$(get_argument_value "$CIS_ETCD_CMD" '--key-file')
                      cfile=$(append_prefix "$CONFIG_PREFIX" "$cfile")
                      kfile=$(append_prefix "$CONFIG_PREFIX" "$kfile")
                      pass "$check"
                      pass "      * cert-file: $cfile"
                      pass "      * key-file: $kfile"
                  else
                    warn "$check"
                  fi
              else
                  warn "$check"
              fi        
        remediation: Follow the etcd service documentation and configure TLS encryption. Then, edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and set the below parameters.  --cert-file=</path/to/ca-file> --key-file=</path/to/key-file>
  - id: 2.2
    title: ""
    checks:
      - id: '2.2'
        description: Ensure that the --client-cert-auth argument is set to true (Automated)
        type: master
        category: kubernetes
        scored: true
        profile: Level 1
        automated: true
        tags:
        - HIPAA
        - NIST
        - PCI
        - GDPR
        audit: |
              check="$id  - $description"
              if check_argument "$CIS_ETCD_CMD" '--client-cert-auth' >/dev/null 2>&1; then
                  pass "$check"
              else
                  warn "$check"
              fi        
        remediation: Edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and set the below parameter. --client-cert-auth="true"
  - id: 2.3
    title: ""
    checks:
      - id: '2.3'
        description: Ensure that the --auto-tls argument is not set to true (Automated)
        type: master
        category: kubernetes
        scored: true
        profile: Level 1
        automated: true
        tags:
        - HIPAA
        - NIST
        - PCI
        - GDPR
        audit: |
              check="$id  - $description"
              if check_argument "$CIS_ETCD_CMD" '--auto-tls=true' >/dev/null 2>&1; then
                  warn "$check"
              else
                  pass "$check"
              fi  
        remediation: Edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and either remove the --auto-tls parameter or set it to false. --auto-tls=false
  - id: 2.4
    title: ""
    checks:
      - id: '2.4'
        description: Ensure that the --peer-cert-file and --peer-key-file arguments are set as appropriate (Automated)
        type: master
        category: kubernetes
        scored: true
        profile: Level 1
        automated: true
        tags:
        - HIPAA
        - NIST
        - PCI
        - GDPR
        audit: |
              check="$id  - $description"
              if check_argument "$CIS_ETCD_CMD" '--peer-cert-file' >/dev/null 2>&1; then
                  if check_argument "$CIS_ETCD_CMD" '--peer-key-file' >/dev/null 2>&1; then
                      cfile=$(get_argument_value "$CIS_ETCD_CMD" '--peer-cert-file')
                      kfile=$(get_argument_value "$CIS_ETCD_CMD" '--peer-key-file')
                      cfile=$(append_prefix "$CONFIG_PREFIX" "$cfile")
                      kfile=$(append_prefix "$CONFIG_PREFIX" "$kfile")
                      pass "$check"
                      pass "      * peer-cert-file: $cfile"
                      pass "      * peer-key-file: $kfile"
                  else
                        warn "$check"
                  fi
              else
                  warn "$check"
              fi        
        remediation: Follow the etcd service documentation and configure peer TLS encryption as appropriate for your etcd cluster. Then, edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and set the below parameters.  --peer-cert-file=</path/to/peer-cert-file> --peer-key-file=</path/to/peer-key-file>
  - id: 2.5
    title: ""
    checks:
      - id: '2.5'
        description: Ensure that the --peer-client-cert-auth argument is set to true (Automated)
        type: master
        category: kubernetes
        scored: true
        profile: Level 1
        automated: true
        tags:
        - HIPAA
        - NIST
        - PCI
        - GDPR
        audit: |
              check="$id  - $description"
              if check_argument "$CIS_ETCD_CMD" '--peer-client-cert-auth=true' >/dev/null 2>&1; then
                  pass "$check"
              else
                  warn "$check"
              fi        
        remediation: Edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and set the below parameter. --peer-client-cert-auth=true
  - id: 2.6
    title: ""
    checks:
      - id: '2.6'
        description: Ensure that the --peer-auto-tls argument is not set to true (Automated)
        type: master
        category: kubernetes
        scored: true
        profile: Level 1
        automated: true
        tags:
        - HIPAA
        - NIST
        - PCI
        - GDPR
        audit: |
              check="$id  - $description"
              if check_argument "$CIS_ETCD_CMD" '--peer-auto-tls=true' >/dev/null 2>&1; then
                  warn "$check"
              else
                  pass "$check"
              fi        
        remediation: Edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and either remove the --peer-auto-tls parameter or set it to false. --peer-auto-tls=false
  - id: 2.7
    title: ""
    checks:
      - id: '2.7'
        description: Ensure that a unique Certificate Authority is used for etcd (Manual)
        type: master
        category: kubernetes
        scored: false
        profile: Level 2
        automated: false
        tags:
        - HIPAA
        - NIST
        - PCI
        - GDPR
        audit: |
              check="$id  - $description"
              if check_argument "$CIS_ETCD_CMD" '--trusted-ca-file' >/dev/null 2>&1; then
                  if check_argument "$CIS_APISERVER_CMD" '--client-ca-file' >/dev/null 2>&1; then
                      tfile=$(get_argument_value "$CIS_ETCD_CMD" '--trusted-ca-file')
                      cfile=$(get_argument_value "$CIS_APISERVER_CMD" '--client-ca-file')
                      tfile=$(append_prefix "$CONFIG_PREFIX" "$tfile")
                      cfile=$(append_prefix "$CONFIG_PREFIX" "$cfile")
                      if [ "$tfile" = "$cfile" ]; then
                          pass "$check"
                          pass "      * trusted-ca-file: $tfile"
                          pass "      * client-ca-file: $cfile"
                      else
                        warn "$check"
                      fi
                  else
                      warn "$check"
                      warn "      * client-ca-file doesn't exist"
                  fi
              else
                  warn "$check"
                  warn "      * trusted-ca-file doesn't exist"
              fi        
        remediation: Follow the etcd documentation and create a dedicated certificate authority setup for the etcd service. Then, edit the etcd pod specification file /etc/kubernetes/manifests/etcd.yaml on the master node and set the below parameter. --trusted-ca-file=</path/to/ca-file>
