version: cis-rke2-1.8.0
id: 3
title: 3 - Control Plane Configuration
type: master
groups:
  - id: 3.1
    title: 3.1 - Authentication and Authorization
    checks:
      - id: K.3.1.1
        description: Client certificate authentication should not be used for users
          (Manual)
        type: master
        category: kubernetes
        scored: false
        profile: Level 1
        automated: false
        tags: {}
        audit: |
          check="$id  - $description"
          manual "$check"
          manual "      * Review user access to the cluster and ensure that users are not making use of Kubernetes client certificate authentication."
        remediation: Alternative mechanisms provided by Kubernetes such as the use
          of OIDC should be implemented in place of client certificates.
      - id: K.3.1.2
        description: Service account token authentication should not be used for users
          (Manual)
        type: master
        category: kubernetes
        scored: false
        profile: Level 1
        automated: false
        tags: {}
        audit: |
          check="$id  - $description"
          manual "$check"
          manual "      * Review user access to the cluster and ensure that users are not making use of service account token authentication."
        remediation: Alternative mechanisms provided by Kubernetes such as the use
          of OIDC should be implemented in place of service account tokens.
      - id: K.3.1.3
        description: Bootstrap token authentication should not be used for users (Manual)
        type: master
        category: kubernetes
        scored: false
        profile: Level 1
        automated: false
        tags: {}
        audit: |
          check="$id  - $description"
          manual "$check"
          manual "      * Review user access to the cluster and ensure that users are not making use of bootstrap token authentication."
        remediation: Alternative mechanisms provided by Kubernetes such as the use
          of OIDC should be implemented in place of bootstrap tokens.
  - id: 3.2
    title: 3.2 - Logging
    checks:
      - id: K.3.2.1
        description: Ensure that a minimal audit policy is created (Automated)
        type: master
        category: kubernetes
        scored: true
        profile: Level 1
        automated: false
        tags:
          HIPAA: []
          GDPR: []
        audit: |
          check="$id  - $description"
          if check_argument "$CIS_APISERVER_CMD" '--audit-policy-file' >/dev/null 2>&1; then
              auditPolicyFile=$(get_argument_value "$CIS_APISERVER_CMD" '--audit-policy-file')
              auditPolicyFile=$(append_prefix "$CONFIG_PREFIX" "$auditPolicyFile")
              pass "$check"
              pass "      * audit-policy-file: $auditPolicyFile"
          else
              warn "$check"
          fi        
        remediation: Create an audit policy file for your cluster.
      - id: K.3.2.2
        description: Ensure that the audit policy covers key security concerns (Manual)
        type: master
        category: kubernetes
        scored: false
        profile: Level 2
        automated: false
        tags:
          HIPAA: []
          GDPR: []
        audit: |
          check="$id  - $description"
          manual "$check"
          manual "      * Access to Secrets managed by the cluster. Care should be taken to only log Metadata for requests to Secrets, ConfigMaps, and TokenReviews, in order to avoid the risk of logging sensitive data."
          manual "      * Modification of pod and deployment objects."
          manual "      * Use of pods/exec, pods/portforward, pods/proxy and services/proxy."        
        remediation: |
          Review the audit policy provided for the cluster and ensure that it covers
          at least the following areas,
          - Access to Secrets managed by the cluster. Care should be taken to only
            log Metadata for requests to Secrets, ConfigMaps, and TokenReviews, in
            order to avoid risk of logging sensitive data.
          - Modification of Pod and Deployment objects.
          - Use of `pods/exec`, `pods/portforward`, `pods/proxy` and `services/proxy`.
          For most requests, minimally logging at the Metadata level is recommended
          (the most basic level of logging).
