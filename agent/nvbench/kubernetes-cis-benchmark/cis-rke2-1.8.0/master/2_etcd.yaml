version: cis-rke2-1.8.0
id: 2
title: 2 - etcd
type: master
groups:
  - id: 2.1
    title: ''
    checks:
      - id: K.2.1
        description: Ensure that the --cert-file and --key-file arguments are set
          as appropriate (Automated)
        type: master
        category: kubernetes
        scored: true
        profile: Level 1
        automated: true
        tags:
          HIPAA: []
          PCI: []
          GDPR: []
        audit: |
          check="$id  - $description"
          if check_argument "$CIS_ETCD_CMD" '--cert-file' >/dev/null 2>&1; then
              if check_argument "$CIS_ETCD_CMD" '--key-file' >/dev/null 2>&1; then
                  cfile=$(get_argument_value "$CIS_ETCD_CMD" '--cert-file')
                  kfile=$(get_argument_value "$CIS_ETCD_CMD" '--key-file')
                  target_cfile="/var/lib/rancher/rke2/server/tls/etcd/server-client.crt"
                  target_kfile="/var/lib/rancher/rke2/server/tls/etcd/server-client.key"

                  if [ "$cfile" = "$target_cfile" ] && [ "$kfile" = "$target_kfile" ]; then
                      pass "$check"
                      pass "      * cert-file: $cfile"
                      pass "      * key-file: $kfile"
                  else
                    warn "$check"
                    warn "      * cert-file should be: $target_cfile, but is: $cfile"
                    warn "      * key-file should be: $target_kfile, but is: $kfile"
                  fi
              else
                warn "$check"
                warn "      * key-file is not set"
              fi
          else
              warn "$check"
              warn "      * cert-file is not set"
          fi
        remediation: |
          By default, RKE2 generates cert and key files for etcd.
          These are located in /var/lib/rancher/rke2/server/tls/etcd/.
          If this check fails, ensure that the configuration file /var/lib/rancher/rke2/agent/kubelet.kubeconfig
          has not been modified to use custom cert and key files.
  - id: 2.2
    title: ''
    checks:
      - id: K.2.2
        description: Ensure that the --client-cert-auth argument is set to true (Automated)
        type: master
        category: kubernetes
        scored: true
        profile: Level 1
        automated: true
        tags:
          HIPAA: []
          PCI: []
          GDPR: []
        audit: |
          check="$id  - $description"
          value=$(get_argument_value "$CIS_ETCD_CMD" '--client-cert-auth')
          if [ "$value" = "true" ]; then
              pass "$check"
          else
              warn "$check"
          fi        
        remediation: |
          By default, RKE2 sets the --client-cert-auth parameter to true.
          If this check fails, ensure that the configuration file /var/lib/rancher/rke2/agent/kubelet.kubeconfig
          has not been modified to disable client certificate authentication.
  - id: 2.3
    title: ''
    checks:
      - id: K.2.3
        description: Ensure that the --auto-tls argument is not set to true (Automated)
        type: master
        category: kubernetes
        scored: true
        profile: Level 1
        automated: true
        tags:
          HIPAA: []
          PCI: []
          GDPR: []
        audit: |
          check="$id  - $description"
          value=$(get_argument_value "$CIS_ETCD_CMD" '--auto-tls')
          if [ "$value" = "true" ]; then
              warn "$check"
          else
              pass "$check"
          fi  
        remediation: |
          By default, RKE2 does not set the --auto-tls parameter.
          If this check fails, edit the etcd pod specification file /var/lib/rancher/rke2/agent/kubelet.kubeconfig on the master
          node and either remove the --auto-tls parameter or set it to false.
          client-transport-security:
            auto-tls: false
  - id: 2.4
    title: ''
    checks:
      - id: K.2.4
        description: Ensure that the --peer-cert-file and --peer-key-file arguments
          are set as appropriate (Automated)
        type: master
        category: kubernetes
        scored: true
        profile: Level 1
        automated: true
        tags:
          HIPAA: []
          PCI: []
          GDPR: []
        audit: |
          check="$id  - $description"
          if check_argument "$CIS_ETCD_CMD" '--peer-cert-file' >/dev/null 2>&1; then
              if check_argument "$CIS_ETCD_CMD" '--peer-key-file' >/dev/null 2>&1; then
                  cfile=$(get_argument_value "$CIS_ETCD_CMD" '--peer-cert-file')
                  kfile=$(get_argument_value "$CIS_ETCD_CMD" '--peer-key-file')
                  target_cfile="/var/lib/rancher/rke2/server/tls/etcd/peer-server-client.crt"
                  target_kfile="/var/lib/rancher/rke2/server/tls/etcd/peer-server-client.key"

                  if [ "$cfile" = "$target_cfile" ] && [ "$kfile" = "$target_kfile" ]; then
                      pass "$check"
                      pass "      * peer-cert-file: $cfile"
                      pass "      * peer-key-file: $kfile"
                  else
                    warn "$check"
                    warn "      * peer-cert-file should be: $target_cfile, but is: $cfile"
                    warn "      * peer-key-file should be: $target_kfile, but is: $kfile"
                  fi
              else
                    warn "$check"
              fi
          else
              warn "$check"
          fi        
        remediation: |
          By default, RKE2 generates peer cert and key files for etcd.
          These are located in /var/lib/rancher/rke2/server/tls/etcd/.
          If this check fails, ensure that the configuration file /var/lib/rancher/rke2/server/db/etcd/config
          has not been modified to use custom peer cert and key files.
  - id: 2.5
    title: ''
    checks:
      - id: K.2.5
        description: Ensure that the --peer-client-cert-auth argument is set to true
          (Automated)
        type: master
        category: kubernetes
        scored: true
        profile: Level 1
        automated: true
        tags:
          HIPAA: []
          PCI: []
          GDPR: []
        audit: |
          check="$id  - $description"
          value=$(get_argument_value "$CIS_ETCD_CMD" '--peer-client-cert-auth')
          if [ "$value" = "true" ]; then
              pass "$check"
          else
              warn "$check"
          fi        
        remediation: |
          By default, RKE2 sets the --peer-cert-auth parameter to true.
          If this check fails, ensure that the configuration file /var/lib/rancher/rke2/agent/kubelet.kubeconfig
          has not been modified to disable peer client certificate authentication.
  - id: 2.6
    title: ''
    checks:
      - id: K.2.6
        description: Ensure that the --peer-auto-tls argument is not set to true (Automated)
        type: master
        category: kubernetes
        scored: true
        profile: Level 1
        automated: true
        tags:
          HIPAA: []
          PCI: []
          GDPR: []
        audit: |
          check="$id  - $description"
          value=$(get_argument_value "$CIS_ETCD_CMD" '--peer-auto-tls')
          if [ "$value" = "true" ]; then
              warn "$check"
          else
              pass "$check"
          fi        
        remediation: |
          By default, RKE2 does not set the --peer-auto-tls parameter.
          If this check fails, edit the etcd pod specification file /var/lib/rancher/rke2/agent/kubelet.kubeconfig on the master
          node and either remove the --peer-auto-tls parameter or set it to false.
          peer-transport-security:
            auto-tls: false
  - id: 2.7
    title: ''
    checks:
      - id: K.2.7
        description: Ensure that a unique Certificate Authority is used for etcd (Manual)
        type: master
        category: kubernetes
        scored: false
        profile: Level 2
        automated: false
        tags:
          HIPAA: []
          PCI: []
          GDPR: []
        audit: |
          check="$id  - $description"
          if check_argument "$CIS_ETCD_CMD" '--trusted-ca-file' >/dev/null 2>&1; then
              if check_argument "$CIS_APISERVER_CMD" '--client-ca-file' >/dev/null 2>&1; then
                  tfile=$(get_argument_value "$CIS_ETCD_CMD" '--trusted-ca-file')
                  cfile="/var/lib/rancher/rke2/server/tls/etcd/peer-ca.crt"
                  tfile=$(append_prefix "$CONFIG_PREFIX" "$tfile")
                  cfile=$(append_prefix "$CONFIG_PREFIX" "$cfile")
                  if [ "$tfile" = "$cfile" ]; then
                      pass "$check"
                      pass "      * trusted-ca-file: $tfile"
                      pass "      * client-ca-file: $cfile"
                  else
                    warn "$check"
                  fi
              else
                  warn "$check"
                  warn "      * client-ca-file doesn't exist"
              fi
          else
              warn "$check"
              warn "      * trusted-ca-file doesn't exist"
          fi        
        remediation: |
          By default, RKE2 generates a unique certificate authority for etcd.
          This is located at /var/lib/rancher/rke2/server/tls/etcd/peer-ca.crt.
          If this check fails, ensure that the configuration file /var/lib/rancher/rke2/agent/kubelet.kubeconfig
          has not been modified to use a shared certificate authority.